{"version":3,"sources":["pages/ErrorPage.js","paths/index.js","container/HomeContainer.js","pages/HomePage.js","components/assets/Loading.js","api/OnlineExhibitionAPI.js","container/OnlineExhibitionContainer.js","container/OnlineExhibitionListContainer.js","store/modal.js","store/exhibition.js","container/SwiperContainer.js","pages/OnlineExhibitionPage.js","lib/cookie.js","container/ConferenceContainer.js","pages/ConferencePage.js","container/WelcomingContainer.js","container/CongraturationContainer.js","pages/WelcomingPage.js","api/NoticeAPI.js","lib/formatter.js","container/Pagination.js","container/PaginationButton.js","container/NoticeListContainer.js","container/NoticeViewContainer.js","pages/NoticeListPage.js","container/SNSContainer.js","pages/SNSPage.js","container/assets/LoadingContainer.js","api/UserAPI.js","lib/formatChecker.js","container/OnlineExhibitionEventContainer.js","components/header/Header.js","store/language.js","App.js","serviceWorker.js","store/dialog.js","store/loading.js","store/index.js","index.js"],"names":["ErrorPage","language","useSelector","state","current","LANGUAGE_PACK","kr","css","title","content","en","cn","jp","current_pack","className","Paths","movie_name","online_go","conference_go","go","LANGUAGE_PATH","id","width","height","src","alt","frameBorder","allow","allowFullScreen","process","to","HomePage","HomeContainer","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","open","classes","Backdrop","CircularProgress","URL","getDocumentList","type","a","query","config","params","module_id","Axios","get","res","data","getShowDocument","OnlineExhibitionContainer","viewId","history","useHistory","useState","booth","setBooth","loading","setLoading","showingDocument","useCallback","alert","goBack","useEffect","e","type2","push","navTitle","htmlFor","unit","num","kr_text","en_text","cn_text","jp_text","map","list","key","onClick","parseInt","title_en","style","position","bottom","margin","textAlign","left","photo_1","display","maxWidth","maxHeight","link","LINK","String","lastIndexOf","length","lastSlash","videoID","slice","videoType","youtube_link","href","indexOf","target","rel","file_1","photo_3","Loading","OnlineExhibitionListContainer","items","swiper","firstOpen","inputRef","useRef","autoClick","leftLists","result","setResult","search","setSearch","find","setFind","exist","setExist","imgError","findList","findItem","filter","item","toLowerCase","focus","searchOn","setSearchOn","searchClass","value","onChange","onKeyPress","ref","click","photo_2","onError","firstModalOpen","createAction","secondModalOpen","modalClose","dialog","handleActions","action","first","second","SETID","setID","exhibition","payload","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","dataSet","slidesPerView","slidesPerGroup","loop","loopedSlides","initialSlide","navigation","watchOverflow","loopPreventsSlide","delay","OnlineExhibitionPage","match","location","index","qs","parse","ignoreQueryPrefix","t","dispatch","useDispatch","setItems","setSwiper","window","scrollTo","name","i","x","y","ARRcookies","document","cookie","split","substr","replace","unescape","getCookie","days","expires","date","Date","setTime","getTime","toGMTString","setCookie","callGetDocumentList","sort","b","swiperItem","SwiperContainer","isNaN","title2","catagory","for","class","name2","mode","CongraturationContainer","WelcomingContainer","crossBrowsingDate","setDate","dateFormatting","dateToYYYYMMDD","join","absolute","monthFormatting","getMonth","dayFormatting","getDate","getFullYear","noticeList","currentPage","currentList","created_at","listLength","paging","pageLink","page","leng","undefined","Math","floor","paginationButton","amount","amount2","subject","PaginationButton","near","noticeView","setNoticeView","callNoticeView","prev","next","contents","download","p","setNoticeList","callNoticeList","getNearFromList","idx","findIndex","NoticeListContainer","NoticeViewContainer","youtube","facebook","instagram","SNSContainer","Object","values","reduce","cur","postUserEvent","email","phone","formData","FormData","append","post","isEmailForm","asValue","test","onlyNumberListener","preventDefault","reducer","trim","OnlineExhibitionEventContainer","secondOpen","close","states","modal","useReducer","tel","agree","setAgree","inputCheck","phoneData","emailData","nextTime","subject2","necessary","placeholder","belong","mobile","privacy","submit","mention","mention2","mention3","cancel","closeModal","top","right","fontWeight","onKeyDown","LANGUAGE_URL_LIST","Header","autoClose","useLocation","selectLanguage","pathbase","pathname","title3","title4","title5","title6","checked","role","setLanguage","c_lang","LANGUAGE_LIST","App","reduxDispatch","STATE_PATH","CSS_PATH","path","component","exact","ConferencePage","WelcomingPage","NoticeListPage","SNSPage","LoadingContainer","Boolean","hostname","confirm","text","handleClick","form","requestType","rootReducer","combineReducers","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e35c7b75.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../static/stylesheets/Error.css';\n\nconst ErrorPage = () => {\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"에러 페이지\",\n            content: \"페이지를 찾을 수 없습니다.\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Error Page\",\n            content: \"Page Not Found.\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            content: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            content: \"일본어\"\n        }\n    }\n    \n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <div className={\"ERROR\" + current_pack.css}>\n            <h1 className={\"title\" + current_pack.css}>{current_pack.title}</h1>\n            <p className={\"warning\" + current_pack.css}>{current_pack.content}</p>\n        </div>\n    );\n};\n\nexport default ErrorPage;","export const Paths = {\n    index: '/',\n    exhibition: '/Online-Exhibition',\n    session: '/Opening-Session',\n    conference: '/Conference',\n    notice: '/Notice',\n    sns: '/SNS',\n    api: 'http://14.63.174.102:84/api/v1',\n    storage: 'http://14.63.174.102:64/'\n};","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { Paths } from '../paths/index'\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            movie_name: \"<제 2회 6차산업제주국제박람회>\",\n            online_go: \"온라인전시관\",\n            conference_go: \"컨퍼런스\",\n            go: \"바로가기\"\n        },\n        en: {\n            css: \" language-en\",\n            movie_name: \"<title>\",\n            online_go: \"Online-Exhibition\",\n            conference_go: \"Conference\",\n            go: \"Go\"\n        },\n        cn: {\n            css: \" language-cn\",\n            movie_name: \"중국어\",\n            online_go: \"중국어\",\n            conference_go: \"중국어\",\n            go: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            movie_name: \"일본어\",\n            online_go: \"일본어\",\n            conference_go: \"일본어\",\n            go: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"main_content\" + current_pack.css}>\n                <div className={\"movie\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={(`${process.env.PUBLIC_URL}/img/bg_mo_movie.png`)} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"220px\"\n                        src=\"https://www.youtube.com/embed/RIweUEaE2xw\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    {/* <span> {current_pack.movie_name} </span> */}\n                </div>\n                <div className={\"right\" + current_pack.css}>\n\n                    <div className={\"onlinego\" + current_pack.css}>\n                        <i></i>\n                        <img src={(`${process.env.PUBLIC_URL}/img/bg_onlinego.png`)} alt=\"\" />\n                        <h3>{current_pack.online_go}</h3>\n                        <span><Link to={LANGUAGE_PATH + Paths.exhibition}>{current_pack.go}  {'>'}</Link></span>\n                    </div>\n\n\n                    <div className={\"confgo\" + current_pack.css}>\n                        <i></i>\n                        <img src={(`${process.env.PUBLIC_URL}/img/bg_confgo.png`)} alt=\"\" />\n                        <h3>{current_pack.conference_go}</h3>\n                        <span><Link to={LANGUAGE_PATH + Paths.conference}>{current_pack.go}  {'>'}</Link></span>\n                    </div>\n\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react';\nimport HomeContainer from '../container/HomeContainer'\n\nconst HomePage = () => {\n    return (\n        <HomeContainer />\n    )\n};\n\nexport default HomePage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n/* Library */\n\nimport { Backdrop, CircularProgress } from '@material-ui/core';\n/* Components */\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff'\n    },\n}));\n\nexport default ({ open }) => {\n    const classes = useStyles();\n    return (\n        <Backdrop className={classes.backdrop} open={open}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    );\n};\n","import Axios from \"axios\";\n\nimport { Paths } from '../paths/index'\n\nconst URL = Paths.api\n\nexport const getDocumentList = async (type) => {\n    const query = `${URL}/document`;\n    const config = {\n        params: {\n            module_id: 1,\n            type: type\n        }\n    };\n    const res = await Axios.get(query, config);\n    return res.data\n}\n\nexport const getShowDocument = async (id) => {\n    const query = `${URL}/document/${id}`\n    const res = await Axios.get(query)\n    return res.data\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Loading from '../components/assets/Loading'\n\nimport { getShowDocument } from '../api/OnlineExhibitionAPI'\n\nimport { Paths } from '../paths/index'\nimport { useHistory } from 'react-router-dom';\n\n\n\nconst OnlineExhibitionContainer = ({ viewId, type }) => {\n    const URL = \"http://14.63.174.102:84\";\n\n    const history = useHistory();\n\n    const [booth, setBooth] = useState({})\n\n    const language = useSelector(state => state.language.current);\n\n    const [loading, setLoading] = useState(false);\n\n    const showingDocument = useCallback(async () => {\n        setLoading(true);\n        try {\n            const res = await getShowDocument(viewId)\n            setBooth(res)\n        } catch (e) {\n            alert('찾으시는 부스가 존재하지 않습니다.')\n            history.goBack();\n        }\n        setLoading(false);\n    }, [viewId, history])\n\n\n\n    useEffect(() => {\n        try {\n            showingDocument();\n        } catch (e) {\n            alert('서버에 오류가 발생했습니다.');\n        }\n    }, [showingDocument]);\n\n    const leftLists = [\n        {\n            num: 0,\n            id: \"c1\",\n            kr_text: \"온라인 전시\",\n            en_text: \"Online-Exhibition\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 1,\n            id: \"c8\",\n            kr_text: \"음료,차류\",\n            en_text: \"Beverages/Tea\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 2,\n            id: \"c6\",\n            kr_text: \"전통식품\",\n            en_text: \"Traditional Foods\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 3,\n            id: \"c2\",\n            kr_text: \"가공식품\",\n            en_text: \"Processed Foods\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 4,\n            id: \"c4\",\n            kr_text: \"건강식품\",\n            en_text: \"Healthy Foods & supplements\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 5,\n            id: \"c7\",\n            kr_text: \"주류\",\n            en_text: \"Alcoholic drinks\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 6,\n            id: \"c3\",\n            kr_text: \"간식\",\n            en_text: \"Snacks\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 7,\n            id: \"c10\",\n            kr_text: \"화장품\",\n            en_text: \"Cosmetics\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 8,\n            id: \"c11\",\n            kr_text: \"유제품\",\n            en_text: \"Dairy products\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 9,\n            id: \"c9\",\n            kr_text: \"천연염색\",\n            en_text: \"Dyed products\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 10,\n            id: \"c5\",\n            kr_text: \"마을공동체\",\n            en_text: \"Local community\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        }\n    ]\n\n    const type2 = []\n    if (booth.type === 0) {\n        type2.push('온라인 전시')\n        type2.push('Online-Exhibition')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 1) {\n        type2.push('음료,차류')\n        type2.push('Beverages/Tea')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 2) {\n        type2.push('전통식품')\n        type2.push('Traditional Foods')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 3) {\n        type2.push('가공식품')\n        type2.push('Processed Foods')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 4) {\n        type2.push('건강식품')\n        type2.push('Healthy Foods & supplements')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 5) {\n        type2.push('주류')\n        type2.push('Alcoholic drinks')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 6) {\n        type2.push('간식')\n        type2.push('Snacks')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 7) {\n        type2.push('화장품')\n        type2.push('Cosmetics')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 8) {\n        type2.push('천연염색')\n        type2.push('Dyed products')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 9) {\n        type2.push('마을공동체')\n        type2.push('Local community')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n    else if (booth.type === 10) {\n        type2.push('유제품')\n        type2.push('Dairy products')\n        type2.push('중국어')\n        type2.push('일본어')\n    }\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            navTitle: \"온라인전시관\"\n        },\n        en: {\n            css: \" language-en\",\n            navTitle: \"OnlineExhibition\"\n        },\n        cn: {\n            css: \" language-cn\",\n            navTitle: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            navTitle: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const listClick = (num) => { history.push(LANGUAGE_PATH + Paths.exhibition + '?type=' + parseInt(num)); };\n\n    const videoType = (link) => {\n        const LINK = String(link)\n\n        if (LINK.lastIndexOf(\"embed\") !== -1) {    //유튜브 embed링크로 넘어오는 경우\n            return <iframe\n                title=\"youtube\"\n                width=\"100%\"\n                height=\"300\"\n                src={link} //비디오 링크가  cms에 추가하는 것이 없음\n                alt=\"\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n            ></iframe>\n        }\n        else if (LINK.length !== 0) {  //유튜브 링크로 넘어오는 경우\n            const lastSlash = LINK.lastIndexOf('/')\n            const videoID = LINK.slice(lastSlash, LINK.length)\n            return <iframe\n                title=\"youtube\"\n                width=\"100%\"\n                height=\"300\"\n                src={`https://www.youtube.com/embed${videoID}`}\n                alt=\"\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen\n            ></iframe>\n        }\n        else {  //파일, 링크 두 가지 다 없는 경우 => \n            return <img src={(`${process.env.PUBLIC_URL}/img/ic_check_on.png`)} alt=\"\" width=\"100%\" height=\"300\" />\n        }\n    }\n\n    return (\n        <section id=\"on_ex_container\" className={current_pack.css}>\n            {!loading &&\n                <>\n                    <div className={\"subnavi\" + current_pack.css}>\n                        <ul>\n                            <li>{current_pack.navTitle}</li>\n                            <li>\n                                <label htmlFor=\"touch\">{language === 'en' ? <><strong>{language === 'en' ? type2[1]\n                                    : language === 'cn' ? type2[2]\n                                        : language === 'jp' ? type2[3]\n                                            : type2[0]}</strong>{current_pack.unit} </>\n                                    : language === 'cn' ? <><strong>{language === 'en' ? type2[1]\n                                        : language === 'cn' ? type2[2]\n                                            : language === 'jp' ? type2[3]\n                                                : type2[0]}</strong>{current_pack.unit} </>\n                                        : language === 'jp' ? <><strong>{language === 'en' ? type2[1]\n                                            : language === 'cn' ? type2[2]\n                                                : language === 'jp' ? type2[3]\n                                                    : type2[0]}</strong>{current_pack.unit} </>\n                                            : <><strong>{language === 'en' ? type2[1]\n                                                : language === 'cn' ? type2[2]\n                                                    : language === 'jp' ? type2[3]\n                                                        : type2[0]}</strong>{current_pack.unit} </>}</label>\n                                <input type=\"checkbox\" id=\"touch\" />\n                                <div className={\"submenu\" + current_pack.css}>\n                                    {leftLists.map(list => (\n                                        <div key={list.id} onClick={() => { listClick(list.num); }} id={list.id} >{language === 'en' ? list.en_text : language === 'cn' ? list.cn_text : language === 'jp' ? list.jp_text : list.kr_text}</div>\n                                    ))}\n                                </div>\n                            </li>\n                            <li>{booth.title}</li>\n                        </ul>\n                    </div>\n\n                    <section id=\"ex_container\" className={current_pack}>\n                        <h2>{language === 'en' ? type2[1]\n                            : language === 'cn' ? type2[2]\n                                : language === 'jp' ? type2[3]\n                                    : type2[0]}ㅣ{language === 'en' ? booth.title_en\n                                        : booth.title}</h2>\n\n                        <div className={\"spot\" + current_pack.css}>\n                            <i style={{ position: \"absolute\", bottom: \"15%\", width: \"100%\", margin: \"0 auto\", textAlign: \"center\", left: \"0px\", zIndex: \"30\" }}>\n                                <img src={URL + booth.photo_1} style={{ display: \"block\", maxWidth: \"120px\", maxHeight: \"65px\", margin: \"0 auto\", textAlign: \"center\" }} alt=\"\" />\n                            </i>\n                            <span><img src={(`${process.env.PUBLIC_URL}/img/img_center_booth.png`)} alt=\"\" /></span>\n                            <div className={\"center\" + current_pack.css}>\n                                {videoType(booth.youtube_link)}\n                            </div>\n\n                        </div>\n                        <div className={\"mobuy\" + current_pack.css}>\n                            <a href={booth.link ?\n                                (booth.link.indexOf(\"http\") !== -1) ?\n                                    booth.link : \"http://\" + booth.link\n                                : \"\"} target={booth.link ? \"_blank\" : \"\"} type=\"submit\" rel=\"noopener noreferrer\" className={\"buy\" + current_pack.css}>\n                                {language === 'en' ? \"Purchase\"\n                                    : language === 'cn' ? \"중국어\"\n                                        : language === 'jp' ? \"일본어\"\n                                            : \"구매하러 가기\"} {'>'}\n                            </a>\n                            <a href={URL + booth.file_1} className={\"buy\" + current_pack.css} rel=\"noopener noreferrer\" target=\"_blank\">\n                                {language === 'en' ? \"Catalog\"\n                                    : language === 'cn' ? \"중국어\"\n                                        : language === 'jp' ? \"일본어\"\n                                            : \"카탈로그 보기\"} {'>'}\n                            </a>\n                        </div>\n                        <div className={\"mowelcome\" + current_pack.css}><a href=\"#!\"><img src={URL + booth.photo_3} alt=\"no photo_3\" /></a></div>\n\n                    </section>\n\n\n\n                </>}\n            <Loading open={loading} />\n        </section>\n    );\n};\n\nexport default OnlineExhibitionContainer;","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Loading from '../components/assets/Loading';\n\nimport { useHistory } from 'react-router-dom';\nimport { Paths } from '../paths';\n\n\nconst OnlineExhibitionListContainer = ({ type, items, loading, swiper, firstOpen }) => {\n    const URL = \"http://14.63.174.102:84\";\n    const history = useHistory();\n    const language = useSelector(state => state.language.current);\n    const inputRef = useRef();                // 검색 기능 구현시 필요\n    const autoClick = useRef()\n\n    const leftLists = [\n        {\n            num: 0,\n            id: \"c1\",\n            kr_text: \"온라인 전시\",\n            en_text: \"Online-Exhibition\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 1,\n            id: \"c8\",\n            kr_text: \"음료,차류\",\n            en_text: \"Beverages/Tea\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 2,\n            id: \"c6\",\n            kr_text: \"전통식품\",\n            en_text: \"Traditional Foods\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 3,\n            id: \"c2\",\n            kr_text: \"가공식품\",\n            en_text: \"Processed Foods\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 4,\n            id: \"c4\",\n            kr_text: \"건강식품\",\n            en_text: \"Healthy Foods & supplements\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 5,\n            id: \"c7\",\n            kr_text: \"주류\",\n            en_text: \"Alcoholic drinks\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 6,\n            id: \"c3\",\n            kr_text: \"간식\",\n            en_text: \"Snacks\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 7,\n            id: \"c10\",\n            kr_text: \"화장품\",\n            en_text: \"Cosmetics\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 8,\n            id: \"c11\",\n            kr_text: \"유제품\",\n            en_text: \"Dairy products\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 9,\n            id: \"c9\",\n            kr_text: \"천연염색\",\n            en_text: \"Dyed products\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 10,\n            id: \"c5\",\n            kr_text: \"마을공동체\",\n            en_text: \"Local community\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        }\n    ]\n\n    const [result, setResult] = useState([]);\n    const [search, setSearch] = useState('');                // 검색 기능 구현시 필요\n    const [find, setFind] = useState([]);\n    const [exist, setExist] = useState(false);\n\n    const onChangeSearch = e => setSearch(e.target.value);         // 검색 기능 구현시 필요\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const listClick = (num) => {\n        history.push(LANGUAGE_PATH + Paths.exhibition + '?type=' + parseInt(num));\n        setFind([]); setSearch(''); setExist(false); autoClick.current.click();\n    };\n\n    const imgError = useCallback((e) => {\n        e.target.src = URL + \"/data/uploaded/documents-photo_1-882.jpeg?v=1602807638\";\n    }, []);\n\n    const findList = useCallback(() => {                 // 검색 기능 구현시 필요\n        // 아무것도 입력 없이 찾기버튼을 눌렀을 때\n        if (search === '') setExist(false);\n        // 입력이 있을경우 언어별로 판단\n        if (language === 'en') {\n            const findItem = items.filter(item => item.title_en.toLowerCase().indexOf(search.toLowerCase()) > -1)\n            if (findItem.length === 0) { alert(\"The booth does not exist.\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        } else if (language === 'cn') {\n            const findItem = items.filter(item => item.title.indexOf(search) > -1)\n            if (findItem.length === 0) { alert(\"중국어\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        } else if (language === 'jp') {\n            const findItem = items.filter(item => item.title.indexOf(search) > -1)\n            if (findItem.length === 0) { alert(\"일본어\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        } else {\n            const findItem = items.filter(item => item.title.indexOf(search) > -1)\n            if (findItem.length === 0) { alert(\"검색하신 부스가 존재하지 않습니다.\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        }\n    }, [search, items, language])\n\n    const handleKeyPrress = e => {           // 검색 기능 구현시 필요\n        if (e.key === 'Enter') {\n            findList();\n        }\n    }\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"온라인전시관\",\n            unit: \"관\",\n            search: \"부스명 검색\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Online Exhibition\",\n            unit: \"\",\n            search: \"Booth name search\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            unit: \"중국어\",\n            search: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            unit: \"일본어\",\n            search: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    useEffect(() => {\n        if (!loading) {\n            if (type === 0) { setResult([]); setResult(items); }\n            else if (type === 8) {\n                setResult([]); setResult(items.filter(item => item.type === 10));\n            } else if (type === 9) {\n                setResult([]); setResult(items.filter(item => item.type === 8));\n            } else if (type === 10) {\n                setResult([]); setResult(items.filter(item => item.type === 9));\n            } else { setResult([]); setResult(items.filter(item => item.type === type)); }\n        }\n    }, [loading, type, items]);\n\n    const [searchOn, setSearchOn] = useState(false);\n    const searchClass = searchOn ? \"on\" : '';\n\n    return (\n        <section id=\"on_ex_container\" className={current_pack.css}>\n            <div className={\"subnavi\" + current_pack.css}>\n                <input type=\"text\" className={\"search-text \" + searchClass} value={search} onChange={onChangeSearch} onKeyPress={handleKeyPrress} ref={inputRef}></input>\n                <ul>\n                    <li>{current_pack.title}</li>\n                    <li>\n                        <label htmlFor=\"touch\">\n                        {language === 'en' ? <strong>{leftLists[type].en_text}{current_pack.unit}</strong>\n                            : language === 'cn' ? <strong>{leftLists[type].cn_text}{current_pack.unit}</strong>\n                                : language === 'jp' ? <strong>{leftLists[type].jp_text}{current_pack.unit}</strong>\n                                    : <strong>{leftLists[type].kr_text}{current_pack.unit}</strong>}\n                        </label>\n                        <input type=\"checkbox\" id=\"touch\" ref={autoClick} />\n                        <div className={\"submenu\" + current_pack.css}>\n                            {leftLists.map(list => (\n                                <div key={list.id} onClick={() => listClick(list.num)} id={list.id} >{language === 'en' ? list.en_text : language === 'cn' ? list.cn_text : language === 'jp' ? list.jp_text : list.kr_text}</div>\n                            ))}\n                        </div>\n                    </li>\n                </ul>\n                <span>\n                    <button type=\"submit\">\n                        <img src={(`${process.env.PUBLIC_URL}/img/ic_mo_search.png`)} onClick={() => setSearchOn(!searchOn)} alt=\"\" />\n                    </button>\n                </span>\n            </div>\n\n            <div className={\"content\" + current_pack.css}>\n                <div className={\"subtop menu01\" + current_pack.css + \" type\" + type}>\n                    <h3>{language === 'en' ? <strong>{leftLists[type].en_text}{current_pack.unit}</strong>\n                        : language === 'cn' ? <strong>{leftLists[type].cn_text}{current_pack.unit}</strong>\n                            : language === 'jp' ? <strong>{leftLists[type].jp_text}{current_pack.unit}</strong>\n                                : <strong>{leftLists[type].kr_text}{current_pack.unit}</strong>}\n                    </h3>\n                </div>\n                {swiper}\n                {!loading &&\n                    <div className={\"bigimg\" + current_pack.css}>\n                        <ul>\n                            {\n                                !exist ?\n                                    result.map(res => (\n                                        <li key={res.id}>\n                                            <em>{language === 'en' ? res.title_en : res.title}</em>\n                                            <img className={\"bigimgsize\" + current_pack.css} src={URL + res.photo_2} onError={imgError} onClick={() => firstOpen(res.id)} alt=\"\" />\n                                        </li>\n                                    ))\n                                    :\n                                    find.map(res => (\n                                        <li key={res.id}>\n                                            <em>{language === 'en' ? res.title_en : res.title}</em>\n                                            <img className={\"bigimgsize\" + current_pack.css} src={URL + res.photo_2} onError={imgError} onClick={() => firstOpen(res.id)} alt=\"\" />\n                                        </li>\n                                    ))\n                            }\n                        </ul>\n                    </div>\n                }\n            </div>\n            <Loading open={loading} />\n        </section>\n    )\n}\n\nexport default OnlineExhibitionListContainer;","import { createAction, handleActions } from 'redux-actions';\n\nconst FIRSTOPEN = 'modal/FIRSTOPEN';\nconst SECONDOPEN = 'modal/SECONDOPEN';\nconst MODALCLOSE = 'modal/MODALCLOSE';\n\nexport const firstModalOpen = createAction(FIRSTOPEN);\nexport const secondModalOpen = createAction(SECONDOPEN);\n\nexport const modalClose = createAction(MODALCLOSE);\n\nconst initialState = {\n    first: false,\n    second: false,\n    open: false\n};\n\nconst dialog = handleActions(\n    {\n        [FIRSTOPEN]: (state, action) => {\n            return {\n                ...state, first: true, second: false, open: true\n            }\n        },\n        [SECONDOPEN]: (state, action) => {\n            return {\n                ...state, first: false, second: true, open: true\n            }\n        },\n        [MODALCLOSE]: (state, action) => {\n            return {\n                ...state, first: false, second: false, open: false\n            }\n        }\n    },\n    initialState\n);\n\nexport default dialog;","import { createAction, handleActions } from 'redux-actions';\n\nconst SETID = 'exhibition/SETID';\n\nexport const setID = createAction(SETID, id => id);\n\nconst initialState = {\n    current: -1\n};\n\nconst exhibition = handleActions(\n    {\n        [SETID]: (state, action) => ({\n            current: action.payload\n        })\n    },\n    initialState\n);\n\nexport default exhibition;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\n// import Swiper core and required components\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport '../static/stylesheets/Swiper.scss';\n// Import Swiper styles\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\n\n// import ErrorImage from '../../public/img/ic_check_on.png';\n\n// install Swiper components\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\n\nexport default ({ dataSet, firstOpen }) => {\n    const URL = 'http://14.63.174.102:84';\n\n    const language = useSelector(state => state.language.current);\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\"\n        },\n        en: {\n            css: \" language-en\"\n        },\n        cn: {\n            css: \" language-cn\"\n        },\n        jp: {\n            css: \" language-jp\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //-------------------------------------------------------------------------------------\n\n\n    return (\n        <>\n            {dataSet === 'Error' ? (\n                <Swiper>\n                    <SwiperSlide>\n                        <img\n                            className={\"error\" + current_pack.css}\n                            src={(`${process.env.PUBLIC_URL}/img/ic_check_on.png`)}\n                            alt=\"\"\n                        />\n                    </SwiperSlide>\n                </Swiper>\n            ) : (\n                    <Swiper\n                        slidesPerView={3} // 보이는 슬라이드 수\n                        slidesPerGroup={1} // 슬라이드 할때 몇개를 슬라이드 할것이냐\n                        loop={dataSet.length > 3}\n                        loopedSlides={3} // 루프를 하면 몇개를 할것인지\n                        initialSlide={0}\n                        navigation\n                        watchOverflow={true}\n                        loopPreventsSlide // 활성화되면 전환이 이미 진행 중일 때 스 와이퍼 슬라이드 이전 / 다음 전환을 방지\n                        delay={300}\n                    >\n                        {dataSet.map((data) => (\n                            <SwiperSlide key={data.id}>\n                                <div>\n                                    <em>{language === 'en' ? data.title_en : data.title}</em>\n                                    <img src={URL + data.photo_2} alt=\"no_image\" onClick={() => firstOpen(data.id)} />\n                                </div>\n                            </SwiperSlide>\n                        ))}\n                    </Swiper>\n                )\n            }\n        </>\n    );\n};\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport qs from 'qs';\n\nimport OnlineExhibitionContainer from '../container/OnlineExhibitionContainer';\nimport OnlineExhibitionListContainer from '../container/OnlineExhibitionListContainer';\n\nimport { getDocumentList } from '../api/OnlineExhibitionAPI';\n\nimport { firstModalOpen } from '../store/modal';\nimport { setID } from '../store/exhibition';\nimport { Paths } from '../paths';\nimport SwiperContainer from '../container/SwiperContainer';\nimport { getCookie, setCookie } from '../lib/cookie';\n\nconst OnlineExhibitionPage = ({ match, location }) => {\n    const { index } = match.params;\n    const viewId = parseInt(index);\n    const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n    });\n    const type = query.type ? query.type : \"0\";\n    const t = parseInt(type);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const language = useSelector(state => state.language.current);\n\n    const [items, setItems] = useState([]);\n    const [swiper, setSwiper] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const firstOpen = useCallback((id) => {\n        window.scrollTo(0, 0);\n        dispatch(setID(id));\n        // const TOKEN = localStorage.getItem('token');\n        const TOKEN = getCookie('token');\n        if (TOKEN) {\n            history.push(LANGUAGE_PATH + Paths.exhibition + '/' + id);\n        } else {\n            // localStorage.setItem('token', true);\n            setCookie('token', true, 1);\n            dispatch(firstModalOpen());\n        }\n    }, [dispatch, history, LANGUAGE_PATH]);\n\n    const callGetDocumentList = useCallback(async () => {\n        setLoading(true);\n        try {\n            const res = await getDocumentList(0); // default : 0\n            res.sort((a, b) => { return a.title < b.title ? -1 : a.title > b.title ? 1 : 0; });\n\n            const swiperItem = res.filter(item => item.type === 8 || item.type === 9);\n            swiperItem.sort((a, b) => { return a.title < b.title ? -1 : a.title > b.title ? 1 : 0; });\n            setSwiper(<SwiperContainer dataSet={swiperItem} firstOpen={firstOpen} />);\n            setItems(res);\n        } catch (e) {\n            alert('서버에 오류가 발생했습니다.');\n            setSwiper(<SwiperContainer dataSet={\"Error\"} />)\n        }\n        setLoading(false);\n    }, [firstOpen]);\n\n    useEffect(() => {\n        try {\n            callGetDocumentList();\n        } catch (e) {\n            alert('서버에 오류가 발생했습니다.');\n        }\n    }, [callGetDocumentList]);\n    return (\n        <>\n            {!isNaN(viewId) ? <OnlineExhibitionContainer viewId={viewId} type={t} />\n                : <OnlineExhibitionListContainer type={t} items={items} loading={loading} swiper={swiper} firstOpen={firstOpen} />}\n\n        </>\n    );\n};\n\nexport default OnlineExhibitionPage;\n","export function setCookie(name, value, days) {\n    let expires = '';\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n        expires = '; expires=' + date.toGMTString();\n    } else {\n        expires = '';\n    }\n\n    document.cookie = name + '=' + value + expires + '; path=/';\n}\n\nexport function getCookie(name) {\n    var i,\n        x,\n        y,\n        ARRcookies = document.cookie.split(';');\n\n    for (i = 0; i < ARRcookies.length; i++) {\n        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf('='));\n        y = ARRcookies[i].substr(ARRcookies[i].indexOf('=') + 1);\n\n        x = x.replace(/^\\s+|\\s+$/g, '');\n\n        if (x === name) {\n            return unescape(y);\n        }\n    }\n}\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\n\n// import { Paths } from '../paths/index'\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"컨퍼런스\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Conference\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    // const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"subnavi\" + current_pack.css}>\n                <ul>\n                    <li>{current_pack.title}</li>\n                </ul>\n            </div>\n            <div className={\"main_content\" + current_pack.css}>\n                <h3 className={\"h3tit\" + current_pack.css}>{current_pack.title}</h3>\n                <div className={\"movie wr\" + current_pack.css}>\n                    {/* <i></i>\n                <img src={(`${process.env.PUBLIC_URL}/img/bg_speech.png`)} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"220px\"\n                        src=\"http://www.jejusoritv.net/p/index.asp\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    {/* <span> {'<'}이름{'('}소속{')>'} </span> */}\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react'\nimport Conference from '../container/ConferenceContainer'\n\nexport default () => {\n    return <Conference />\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Paths } from '../paths/index';\n\n// import { Paths } from '../paths/index'\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"개회사\",\n            title2: \"축사\",\n            catagory: \"오프닝세션\",\n            name: \"이름(소속)\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Welcome Address\",\n            title2: \"Congratulatory message\",\n            catagory: \"OpeningSession\",\n            name: \"name()\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            title2: \"중국어\",\n            catagory: \"\",\n            name: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            title2: \"일본어\",\n            catagory: \"\",\n            name: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"subnavi\" + current_pack.css}>\n                <ul>\n                    <li>{current_pack.catagory}</li>\n                    <li>\n                        <label for=\"touch\">{current_pack.title}</label>\n                        <input type=\"checkbox\" id=\"touch\"/> \n                        <div class=\"submenu sm\">\n                            <Link to={LANGUAGE_PATH + Paths.session}>{current_pack.title}</Link>\n                            <Link to={LANGUAGE_PATH + Paths.session + \"/congraturation\"}>{current_pack.title2}</Link>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <div className={\"main_content\" + current_pack.css}>\n                <h3 className={\"h3tit\" + current_pack.css}>{current_pack.title}</h3>\n                <div className={\"movie wr\" + current_pack.css}>\n                    {/* <i></i>\n                <img src={(`${process.env.PUBLIC_URL}/img/bg_mo_movie.png`)} alt=\"\"/> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"220px\"\n                        src=\"https://www.youtube.com/embed/F_3m0ucTsZ0\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span>제주특별자치도지사 원희룡</span>\n                </div>\n                <div className={\"movie wr\" + current_pack.css}>\n                    {/* <i></i>\n                <img src={(`${process.env.PUBLIC_URL}/img/bg_mo_movie.png`)} alt=\"\"/> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"220px\"\n                        src=\"https://www.youtube.com/embed/35nf0HYGMQw\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span> 농어업농어촌특별위원회 위원장 정현찬 </span>\n                </div>\n            </div>\n        </section>\n\n    )\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { Paths } from '../paths/index'\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"개회사\",\n            title2: \"축사\",\n            catagory: \"오프닝세션\",\n            name: \"이름(소속)\",\n            name2: \"이름(소속)\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Welcome Address\",\n            title2: \"Congratulatory message\",\n            catagory: \"OpeningSession\",\n            name: \"name()\",\n            name2: \"name()\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            title2: \"중국어\",\n            catagory: \"\",\n            name: \"중국어\",\n            name2: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            title2: \"일본어\",\n            catagory: \"\",\n            name: \"일본어\",\n            name2: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"subnavi\" + current_pack.css}>\n                <ul>\n                    <li>{current_pack.catagory}</li>\n                    <li>\n                        <label for=\"touch\">{current_pack.title2}</label>\n                        <input type=\"checkbox\" id=\"touch\"/> \n                        <div class=\"submenu sm\">\n                            <Link to={LANGUAGE_PATH + Paths.session}>{current_pack.title}</Link>\n                            <Link to={LANGUAGE_PATH + Paths.session + \"/congraturation\"}>{current_pack.title2}</Link>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <div className={\"main_content\" + current_pack.css}>\n                <h3 className={\"h3tit pt20\" + current_pack.css}>{current_pack.title2}</h3>\n                <div className={\"movie wr\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={(`${process.env.PUBLIC_URL}/img/bg_mo_movie.png`)} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"220px\"\n                        src=\"https://www.youtube.com/embed/D6B7JTYF3fQ\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span>제주특별자치도의회 좌남수 의원</span>\n                </div>\n                <div className={\"movie wr\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={(`${process.env.PUBLIC_URL}/img/bg_mo_movie.png`)} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"220px\"\n                        src=\"https://www.youtube.com/embed/ygVM4k7lZck\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span> 더불어민주당 위성곤 의원</span>\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react'\n\nimport WelcomingContainer from '../container/WelcomingContainer'\nimport CongraturationContainer from '../container/CongraturationContainer'\n\nexport default ({ match }) => {\n    const { mode } = match.params;\n\n    return (\n        <>\n            {mode === 'congraturation' ? <CongraturationContainer />\n            : <WelcomingContainer />}\n        </>\n    )\n}","import Axios from \"axios\";\n\nimport { Paths } from '../paths/index'\n\nconst URL = Paths.api\n\nexport const getDocumentList = async () => {\n    const query = `${URL}/document?module_id=2`\n    const res = await Axios.get(query)\n    return res.data\n}\n\nexport const getShowDocument = async (id) => {\n    const query = `${URL}/document/${id}?moduel_id=2`\n    const res = await Axios.get(query)\n    return res.data\n}","\nexport function stringNumberToInt(strNumber) {\n    // 구분자가 들어간 수치 데이터를 숫자로 변경\n    if (strNumber !== undefined && strNumber !== null) {\n        return strNumber !== '' ? parseInt(strNumber.replace(/,/g, '')) : 0;\n    }\n    return 0;\n}\nexport function numberFormat(x) {\n    // 수치 데이터에 구분자(,)를 넣음\n    if (x !== undefined && x !== null) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n        return '0';\n    }\n}\nexport function numberToKorean(number) {\n    // 수치 데이터를 한글 표현으로 변경\n    const inputNumber = number < 0 ? false : number;\n    const unitWords = ['', '만', '억', '조', '경'];\n    const splitUnit = 10000;\n    const splitCount = unitWords.length;\n    let resultArray = [];\n    let resultString = '';\n    for (let i = 0; i < splitCount; i++) {\n        let unitResult =\n            (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n        unitResult = Math.floor(unitResult);\n        if (unitResult > 0) {\n            resultArray[i] = unitResult;\n        }\n    }\n    for (let i = 0; i < resultArray.length; i++) {\n        if (!resultArray[i]) continue;\n        resultString = String(numberFormat(resultArray[i])) + unitWords[i] + resultString;\n    }\n    return resultString;\n}\n\nconst MS = 1000;\nconst DIF_MINUTES = 60 * MS;\nconst DIF_HOURS = 60 * DIF_MINUTES;\nconst DIF_DAYS = 24 * DIF_HOURS;\n\nconst crossBrowsingDate = date => {\n    if (date) {\n        let setDate = null;\n        if (typeof date === 'string') {\n            // IE 에서 YYYY-MM-DD HH:MM:SS 를 생성자로 사용할 수 없기 때문에 예외 처리.\n            setDate = date.replace(/-/g, '/');\n            // YYYY/MM/DD HH:MM:SS로 변경해줌\n        } else setDate = date;\n        return new Date(setDate);\n    }\n    return new Date(0);\n}\nconst dateFormatting = (date) => (date < 10 ? '0' + date : date); // 달력의 수치를 두 자리로 변환해주는 함수\nexport const dateToYYYYMMDD = (date, join = '-') => {\n    // Javascript Date 객체를 형식에 맞게 변환하여 표현함.\n    const absolute = crossBrowsingDate(date); // 만약에 Date 객체가 넘어오지 않을 것을 대비\n    const monthFormatting = dateFormatting(absolute.getMonth() + 1); // 월을 두 자리로 변환\n    const dayFormatting = dateFormatting(absolute.getDate()); // 일을 두 자리로 변환\n    return (\n        absolute.getFullYear() + join + monthFormatting + join + dayFormatting\n    );\n};\nexport const dateToYYYYMMDDHHMMSS = (date, join = '-') => {\n    const absolute = crossBrowsingDate(date);\n    return (\n        dateToYYYYMMDD(absolute, join) +\n        ` ${dateFormatting(absolute.getHours())}:${dateFormatting(\n            absolute.getMinutes(),\n        )}:${dateFormatting(absolute.getSeconds())}`\n    );\n};\n\nexport const dateToRelative = (date, join = '-') => {\n    // Javascript Date 객체를 현재 시간과 비교하여 표현함.\n    const current = Date.now(),\n        relative = crossBrowsingDate(date);\n    const elapsed = current - relative.getTime();\n\n    if (elapsed >= DIF_DAYS) {\n        return dateToYYYYMMDD(relative, join);\n    } else if (elapsed >= DIF_HOURS) {\n        return `${Math.floor(elapsed / DIF_HOURS)}시간 전`;\n    } else if (elapsed >= DIF_MINUTES) {\n        return `${Math.floor(elapsed / DIF_MINUTES)}분 전`;\n    } else if (elapsed >= 0) {\n        return `${Math.floor(elapsed / MS)}초 전`;\n    } else if (elapsed >= -DIF_MINUTES) {\n        return `${-Math.ceil(elapsed / MS)}초 후`;\n    } else if (elapsed >= -DIF_HOURS) {\n        return `${-Math.ceil(elapsed / DIF_MINUTES)}분 후`;\n    } else if (elapsed >= -DIF_DAYS) {\n        return `${-Math.ceil(elapsed / DIF_HOURS)}시간 후`;\n    } else {\n        return dateToYYYYMMDD(relative, join);\n    }\n};\n\nconst Days = ['일', '월', '화', '수', '목', '금', '토'];\n\nexport const dateToMMDD = (date, join = '-') =>\n    `${dateFormatting(date.getMonth() + 1)}${join}${dateFormatting(\n        date.getDate(),\n    )}`;\nexport const dateToHHMM = (date, join = ':') =>\n    `${dateFormatting(date.getHours())}${join}${dateFormatting(\n        date.getMinutes(),\n    )}`;\nexport const dateToDay = (date) => Days[date];\n\nexport const secondsToMMSS = (second) => {\n    const minute = Math.floor(second / 60);\n    const remainSecond = second % 60;\n\n    return `${minute}:${\n        remainSecond >= 10 ? remainSecond : `0${remainSecond}`\n    }`;\n};\n\nexport const stringToTel = str => str ? str.replace(/(^02.{0}|^01.{1}|[0-9]{3})([0-9]+)([0-9]{4})/, '$1-$2-$3')\n    : '';\n// string을 전화번호 표현(구분자 '-' 추가)으로 변경\nexport const telToString = tel => tel ? tel.replace('-', '') : '';\n// 전화번호 표현을 string으로 변경\n\n\nexport const hideEmail = (email) => {\n    const s = email.indexOf('@');\n    return email.substr(0, s - 2) + '**';\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { dateToYYYYMMDD } from '../lib/formatter';\nimport { Paths } from '../paths';\n\nconst PAGE_PER_VIEW = 10; // 한 페이지에 10개 보여주겠다.\n\nexport default ({ noticeList, currentPage }) => {\n\n    const language = useSelector(state => state.language.current);\n    // const currentList = noticeList.slice(currentPage.page * 10 - 10, currentPage.page * 10 - 1)\n    // 이것도 수식을 이렇게 하면 중복 숫자 10 제거..\n    const currentList = noticeList.slice((currentPage - 1) * PAGE_PER_VIEW, currentPage * PAGE_PER_VIEW);\n    \n    \n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    //--------------------------------------------------------------------------------------\n    // const LANGUAGE_PACK = {\n    //     kr: {\n    //         css: \"\",\n    //         go: \"바로가기\"\n    //     },\n    //     en: {\n    //         css: \" language-en\",\n    //         go: \"Link\"\n    //     },\n    //     cn: {\n    //         css: \" language-cn\",\n    //         go: \"중국어\"\n    //     },\n    //     jp: {\n    //         css: \" language-jp\",\n    //         go: \"일본어\"\n    //     }\n    // }\n\n    // const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <>\n            {currentList.map(item =>\n                <li key={item.id}><Link to={LANGUAGE_PATH + Paths.notice + '/' + item.id} ><strong>{item.title}</strong><span>{dateToYYYYMMDD(item.created_at)} | 공지사항</span></Link></li>\n            )}\n        </>\n    );\n};","import React, { useCallback } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom'\nimport { Paths } from '../paths';\n\nexport default ({ noticeList, currentPage }) => {\n\n    const language = useSelector(state => state.language.current);\n    const history = useHistory();\n    const listLength = noticeList.length\n    const paging = []\n\n    const paginationButton = (listLength) => {\n        let leng = undefined\n        if (listLength % 10 === 0) leng = Math.floor(listLength / 10)\n        else leng = Math.floor(listLength / 10 + 1)\n\n        for (let i = 0; i < leng; i++) {\n            paging.push(i + 1)\n        }\n    }\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const pageLink = useCallback(page => {\n        if (page <= 0) history.push(LANGUAGE_PATH + Paths.notice + '?page=1')\n        else if (page > paging.length) history.push(LANGUAGE_PATH + Paths.notice + '?page=' + paging.length)\n        else history.push(LANGUAGE_PATH + Paths.notice + '?page=' + page)\n    }, [paging, history, LANGUAGE_PATH]);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\"\n        },\n        en: {\n            css: \" language-en\"\n        },\n        cn: {\n            css: \" language-cn\"\n        },\n        jp: {\n            css: \" language-jp\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <>\n            <li><div onClick={() => pageLink(1)} ><img src={(`${process.env.PUBLIC_URL}/img/ic_first.png`)} alt=\"\" /></div></li>\n            <li><div onClick={() => pageLink(parseInt(currentPage) - 1)} ><img src={(`${process.env.PUBLIC_URL}/img/ic_prev.png`)} alt=\"\" /></div></li>\n\n            {paginationButton(listLength)}\n            {\n                paging.map(item =>\n                    <li key={item} className={item + current_pack.css}><div onClick={() => pageLink(item)} className={item === currentPage ? \"on\" : \"\" + current_pack.css} >{item}</div></li>\n                )\n            }\n\n            <li><div onClick={() => pageLink(parseInt(currentPage) + 1)} ><img src={(`${process.env.PUBLIC_URL}/img/ic_next.png`)} alt=\"\" /></div></li>\n            <li><div onClick={() => pageLink(paging.length)} ><img src={(`${process.env.PUBLIC_URL}/img/ic_end.png`)} alt=\"\" /></div></li>\n        </>\n    )\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\n// import { Link } from 'react-router-dom'\n\n// import { Paths } from '../paths/index'\n\n\nimport Pagination from './Pagination'\nimport PaginationButton from './PaginationButton'\n\nexport default ({ page, noticeList }) => {\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"공지사항\",\n            amount: \"총\",\n            amount2: \"건의 글이 있습니다.\",\n            date: \"작성일자\",\n            subject: \"제목\",\n            go: \"보기\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Notice\",\n            amount: \"There are a total\",\n            amount2: \"articles\",\n            date: \"Date\",\n            subject: \"Contents\",\n            go: \"View\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            amount: \"중국어\",\n            amount2: \"중국어\",\n            date: \"중국어\",\n            subject: \"중국어\",\n            go: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            amount: \"일본어\",\n            amount2: \"일본어\",\n            date: \"일본어\",\n            subject: \"일본어\",\n            go: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    // const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <section id=\"comm_container\" className={current_pack.css}>\n            <div className={\"subnavi\" + current_pack.css}>\n                <ul>\n                    <li>{current_pack.title}</li>\n                </ul>\n            </div>\n            <div className={\"noticebox\" + current_pack.css}>\n                <span>{current_pack.amount} <strong>{noticeList.length}</strong> {current_pack.amount2}</span>\n                <div className=\"noticetxt\">\n                    <ul>\n                        <Pagination noticeList={noticeList} currentPage={page} />\n                    </ul>\n                </div>\n                <div className={\"tnavi\" + current_pack.css}>\n                    <ul>\n                        <PaginationButton noticeList={noticeList} currentPage={page} />\n                    </ul>\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Paths } from '../paths'\n\nimport { getShowDocument } from '../api/NoticeAPI'\nimport Loading from '../components/assets/Loading'\nimport { dateToYYYYMMDD } from '../lib/formatter'\nimport { useSelector } from 'react-redux'\n\nexport default ({ viewId, near }) => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const [noticeView, setNoticeView] = useState({})\n\n    const language = useSelector(state => state.language.current);\n\n    const callNoticeView = useCallback(async () => {\n        setLoading(true);\n        // api 요청할 때는 로딩 중이 필요하다\n        try {\n            const res = await getShowDocument(viewId);\n            if (res) {\n                setNoticeView(res);\n            }\n        } catch (e) {\n            // 예외처리 해주고\n            alert('삭제되거나 없는 게시물입니다.');\n            history.goBack();\n        }\n        setLoading(false);\n    }, [viewId, history]);\n\n    useEffect(() => {\n        callNoticeView();\n        // 코드 이렇게 쓰면 res 에러 검출 못 한다\n        // 무조건 try catch 해라\n    }, [callNoticeView])\n    // useEffect에서 async 잘 안 씀\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"공지사항\",\n            list: \"목 록\",\n            prev: \"이전글\",\n            next: \"다음글\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Notice\",\n            list: \"List\",\n            prev: \"Prev\",\n            next: \"Next\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            list: \"중국어\",\n            prev: \"중국어\",\n            next: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            list: \"일본어\",\n            prev: \"일본어\",\n            next: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <section id=\"comm_container\" className={current_pack.css}>\n            <div className={\"subnavi\" + current_pack.css}>\n                <ul>\n                    <li>\n                        {current_pack.title}\n                    </li>\n                </ul>\n            </div>\n            {!loading && (\n                <div className={\"noticeview\" + current_pack.css}>\n                    <div className={\"viewhead\" + current_pack.css}>\n                        <h3>{noticeView.title}</h3>\n                        <ul>\n                            <li>{current_pack.title}</li>\n                            <li>{dateToYYYYMMDD(noticeView.created_at)}</li>\n                            <li>조회수 637</li>\n                        </ul>\n                    </div>\n                    <div className={\"viewcontent\" + current_pack.css}>\n                        {noticeView.contents}\n                        <div className={\"file\" + current_pack.css}>\n                            {noticeView.file_1 && <a href={URL + noticeView.file_1} download>\n                                <img\n                                    src={`${process.env.PUBLIC_URL}/img/ic_download.png`}\n                                    alt=\"download\"\n                                />\n                            </a>}\n                            <span>\n                                {noticeView.file_1}\n                                {/* <em>334kb</em> */}\n                            </span>\n                        </div>\n                    </div>\n                    <div className={\"btbox\" + current_pack.css}>\n                        <Link to={LANGUAGE_PATH + Paths.notice} className={\"bk\" + current_pack.css}>\n                            {current_pack.list}\n                        </Link>\n                        {near.prev && <Link to={LANGUAGE_PATH + Paths.notice + '/' + near.prev} className={\"wr\" + current_pack.css}>\n                            {current_pack.prev}\n                        </Link>}\n                        {near.next && <Link to={LANGUAGE_PATH + Paths.notice + '/' + near.next} className={\"wr\" + current_pack.css}>\n                            {current_pack.next}\n                        </Link>}\n                    </div>\n                </div>\n            )}\n            <Loading open={loading} />\n        </section>\n    );\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { getDocumentList } from '../api/NoticeAPI'\nimport qs from 'qs';\n\nimport NoticeListContainer from '../container/NoticeListContainer'\nimport NoticeViewContainer from '../container/NoticeViewContainer'\nimport Loading from '../components/assets/Loading';\n\nexport default ({ match, location, history }) => {\n    const { index } = match.params; // 이걸 view인지 검출하지말고\n    const viewId = parseInt(index);\n    // const [viewId, setViewId] = useState(0);\n    // 이것도 필요가 없지 REST_API 쓸거니까\n\n    const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n    });\n    const page = query.page ? query.page : \"1\";\n    const p = parseInt(page);\n    // 현재 페이지 가져오는거(?page= 이 없으면 1페이지)\n\n    const [loading, setLoading] = useState(false);\n    const [noticeList, setNoticeList] = useState([]);\n\n    const callNoticeList = useCallback(async () => {\n        setLoading(true);\n        try {\n            const res = await getDocumentList();\n            if (res) {\n                setNoticeList(res);\n            }\n        } catch (e) {\n            alert('목록을 가져오는데 실패했습니다.');\n        }\n        setLoading(false);\n    }, []);\n\n    useEffect(() => {\n        callNoticeList();\n    }, [callNoticeList]);\n\n    const getNearFromList = useCallback(id => {\n        const idx = noticeList.findIndex(item => item.id === id)\n        if (idx !== -1) {\n            const prev = idx !== noticeList.length - 1 ? noticeList[idx + 1].id : null;\n            const next = idx !== 0 ? noticeList[idx - 1].id : null;\n            return { prev, next };\n        } else {\n            return { prev: null, next: null}; // 에러\n        }\n    } , [noticeList]);\n\n    return (\n        <>\n            {!loading && <>\n                {!isNaN(viewId) ? <NoticeViewContainer viewId={viewId} near={getNearFromList(viewId)} />\n                : <NoticeListContainer page={p} noticeList={noticeList} />}\n            </>}\n            <Loading open={loading} />\n        </>\n    )\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\n// import { Link } from 'react-router-dom'\n\n// import { Paths } from '../paths/index'\n\nexport default () => {\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"SNS\",\n            youtube: \"유튜브 바로가기\",\n            facebook: \"페이스북 바로가기\",\n            instagram: \"인스타그램 바로가기\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"SNS\",\n            youtube: \"You Tube Link\",\n            facebook: \"Facebook Link\",\n            instagram: \"Instagram Link\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            youtube: \"중국어\",\n            facebook: \"중국어\",\n            instagram: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            youtube: \"일본어\",\n            facebook: \"일본어\",\n            instagram: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    // const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"subnavi\" + current_pack.css}>\n                <ul>\n                    <li>{current_pack.title}</li>\n                </ul>\n\n            </div>\n            <div className={\"snsbox\" + current_pack.css}>\n                <ul>\n                    <li><a rel=\"noopener noreferrer\" href=\"https://www.youtube.com/channel/UCrVe4zDkzenuAjrH-6ukEjw\" target=\"_blank\"><i><img src={(`${process.env.PUBLIC_URL}/img/img_youtube.png`)} alt=\"youtube\" /></i>{current_pack.youtube}</a></li>\n                    <li><a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/6%EC%B0%A8%EC%82%B0%EC%97%85%EC%A0%9C%EC%A3%BC%EA%B5%AD%EC%A0%9C%EB%B0%95%EB%9E%8C%ED%9A%8C-112819440075222\" target=\"_blank\"><i><img src={(`${process.env.PUBLIC_URL}/img/img_facebook.png`)} alt=\"facebook\" /></i>{current_pack.facebook}</a></li>\n                    <li><a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/farmingplus_jeju/\" target=\"_blank\"><i><img src={(`${process.env.PUBLIC_URL}/img/img_instagram.png`)} alt=\"instagram\" /></i>{current_pack.instagram}</a></li>\n                </ul>\n            </div>\n        </section>\n    );\n};","import React from 'react'\nimport SNSContainer from '../container/SNSContainer'\n\nexport default () => {\n    return <SNSContainer />\n}","import React from 'react';\n/* Library */\n\nimport { useSelector } from 'react-redux';\n/* Redux */\n\nimport Loading from '../../components/assets/Loading';\n/* Components */\n\nexport default () => {\n    const state = useSelector(state => state.loading);\n    return <Loading open={Object.values(state).reduce((prev, cur) => prev || cur, false)} />\n};\n","import Axios from 'axios'\n\nimport { Paths } from '../paths/index'\n\nconst URL = Paths.api\n\nexport const postUserEvent = async ({ name, position, email, phone }) => {\n    const query = `${URL}/user/add_attend_user`\n\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('position', position);\n    formData.append('email', email);\n    formData.append('phone', phone);\n\n    const res = await Axios.post(query, formData);\n\n    return res.data;\n}","export const isEmailForm = (asValue) => {\n    const regExp = /^[0-9a-zA-Z]([-_\\\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n    return regExp.test(asValue); // 형식에 맞는 경우 true 리턴\n};\n\nexport const isCellPhoneForm = (asValue) => {\n    const regExp =  /^01(?:0|1|[6-9])(?:\\d{3}|\\d{4})\\d{4}$/;\n    const hyphenRegExp = /^01(?:0|1|[6-9])-(?:\\d{3}|\\d{4})-\\d{4}$/\n    return regExp.test(asValue) || hyphenRegExp.test(asValue); // 형식에 맞는 경우 true 리턴\n};\n\nexport const isPasswordForm = (asValue) => {\n    const regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/; //  8 ~ 10자 영문, 숫자 조합\n    return regExp.test(asValue); // 형식에 맞는 경우 true 리턴\n};\n\nexport const onlyNumber = value => /[0-9,-]/.test(value) || value.length > 1;\nexport const onlyNumberListener = e => !onlyNumber(e.key) && e.preventDefault();\n\nexport const isEmpty = param => Object.keys(param).length === 0;","import React, { useCallback, useReducer, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { secondModalOpen, modalClose } from '../store/modal';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop } from '@material-ui/core';\nimport { postUserEvent } from '../api/UserAPI';\nimport { useHistory } from 'react-router-dom';\nimport { Paths } from '../paths';\nimport { isCellPhoneForm, isEmailForm, onlyNumberListener } from '../lib/formatChecker';\n/* Redux */\n\nfunction reducer(state, action) {\n    return {\n        ...state,\n        [action.name]: action.value.trim(),\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        css: \"\",\n        zIndex: 90,\n    },\n}));\n\nconst OnlineExhibitionEventContainer = () => {\n\n    const language = useSelector(state => state.language.current);\n    const viewId = useSelector(state => state.exhibition.current);\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const secondOpen = useCallback(() => dispatch(secondModalOpen()), [dispatch]);\n    const close = useCallback(() => dispatch(modalClose()), [dispatch]);\n\n    const states = useSelector(state => state.modal);\n    const { first, second, open } = states;\n\n    const [state, action] = useReducer(reducer, {\n        name: '',\n        position: '', // 소속\n        title: '', // 직함\n        phone: '', // 휴대폰 번호\n        tel: '', // 전화번호\n        email: ''\n    });\n    const { name, position, title, phone, tel, email } = state;\n    const onChange = (e) => action(e.target);\n\n    const [agree, setAgree] = useState(false);\n\n    const inputCheck = useCallback(async (e) => {\n\n        e.preventDefault();\n\n        const phoneData = isCellPhoneForm(phone, false);\n        const emailData = isEmailForm(email);\n\n        if (name === '' || position === '' || title === '' || phone === '' || tel === '' || email === '' || !agree)\n            alert(\"필수항목들을 입력해주세요\");\n        else if (!phoneData && !emailData)  // 둘다 틀림\n            alert(\"휴대폰 번호와 이메일 주소를 확인해 주세요.\");\n        else if (!phoneData && emailData)\n            alert(\"휴대폰 번호를 확인해 주세요.\");\n        else if (phoneData && !emailData)\n            alert(\"이메일 주소를 확인해 주세요.\");\n        else {\n            try {\n                await postUserEvent({\n                    name: name,\n                    position: position,\n                    email: email,\n                    phone: phone\n                });\n            } catch (e) {\n                alert('서버에 오류가 발생했습니다.');\n            }\n            dispatch(modalClose());\n            history.push(Paths.exhibition + '/' + viewId);\n        }\n\n    }, [name, position, email, phone, dispatch, history, viewId, agree, tel, title]);\n\n    const nextTime = useCallback(() => {\n        dispatch(modalClose());\n        history.push(Paths.exhibition + '/' + viewId);\n    }, [dispatch, history, viewId]);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            subject: \"이벤트 참여를 위한 회원정보 입력\",\n            subject2: \"\",\n            necessary: \"*는 필수 항목입니다.\",\n            name: \"이름\",\n            placeholder: \"영문, 숫자, _ 만 입력 가능, 최소 3자 이상\",\n            belong: \"소속\",\n            title: \"직함\",\n            mobile: \"휴대폰 번호\",\n            phone: \"전화번호\",\n            email: \"이메일 주소\",\n            privacy: \"개인정보취급방침\",\n            agree: \"동의합니다\",\n            submit: \"응모하기\"\n        },\n        en: {\n            css: \" language-en\",\n            subject: \"Entering member information\",\n            subject2: \"to participate in the event\",\n            necessary: \"*\",\n            name: \"Name\",\n            placeholder: \"Only English, numbers, and_can be entered, at least 3 characters\",\n            belong: \"Organization\",\n            title: \"Title\",\n            mobile: \"Mobile\",\n            phone: \"Phone\",\n            email: \"e-mail\",\n            privacy: \"Privacy policy\",\n            agree: \"I agree\",\n            submit: \"Submit\"\n        },\n        cn: {\n            css: \" language-cn\",\n            subject: \"중국어\",\n            subject2: \"중국어\",\n            necessary: \"중국어\",\n            name: \"중국어\",\n            placeholder: \"중국어\",\n            belong: \"중국어\",\n            title: \"중국어\",\n            mobile: \"중국어\",\n            phone: \"중국어\",\n            email: \"중국어\",\n            privacy: \"중국어\",\n            agree: \"중국어\",\n            submit: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            mention: \"일본어\",\n            mention2: \"일본어\",\n            mention3: \"일본어\",\n            join: \"일본어\",\n            cancel: \"일본어\",\n            subject: \"일본어\",\n            subject2: \"일본어\",\n            necessary: \"일본어\",\n            name: \"일본어\",\n            placeholder: \"일본어\",\n            belong: \"일본어\",\n            title: \"일본어\",\n            mobile: \"일본어\",\n            phone: \"일본어\",\n            email: \"일본어\",\n            privacy: \"일본어\",\n            agree: \"일본어\",\n            submit: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const closeModal = useCallback(() => {\n        dispatch(modalClose());\n        history.goBack()\n    }, [dispatch, history]);\n\n    return (\n        <>\n\n            <div className={\"modal\" + current_pack.css}>\n                {/* event1 */}\n                {first &&\n                    <div className={\"eventin\" + current_pack.css}>\n                        <h3><strong>이벤트 참여 후</strong>전시관 둘러보기</h3>\n                        <span>행사 종료 후 추첨을 통하여 경품을 지급해 드립니다.</span>\n                        <p><img src={(`${process.env.PUBLIC_URL}/img/img_eventin.png`)} alt=\"\" /></p>\n                        <Link to=\"#\" className={\"btin\" + current_pack.css} onClick={secondOpen}>참여하기</Link>\n                        <Link to=\"#\" className={\"btclose\" + current_pack.css} onClick={nextTime}>다음에</Link>\n                    </div>\n                }\n                {/* event2 */}\n                {second &&\n                    <div className={\"eventtxt\" + current_pack.css}>\n                        <img src={`${process.env.PUBLIC_URL}/icon/close.svg`} alt=\"\" style={{position: \"absolute\", top: \"20px\", right: \"30px\"}} onClick={closeModal} />\n                        {language === \"en\" ? <><h3>{current_pack.subject}</h3><p /><div>{current_pack.subject2}</div></>\n                            : language === \"cn\" ? <><h3>{current_pack.subject}</h3><p /><div>{current_pack.subject2}</div></>\n                                : language === \"jp\" ? <><h3>{current_pack.subject}</h3><p /><div>{current_pack.subject2}</div></>\n                                    : <h3 style={{ fontWeight: 'bold' }}>{current_pack.subject}</h3>}\n                        <span className={\"inf\" + current_pack.css}>{current_pack.necessary}</span>\n                        <dl className={\"fir\" + current_pack.css}>\n                            <dt>{current_pack.name}</dt>\n                            <dd>\n                                <input\n                                    type=\"text\"\n                                    placeholder={current_pack.placeholder}\n                                    style={{ width: '100%' }}\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={onChange}\n                                />\n                            </dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.belong} </dt>\n                            <dd><input type=\"text\" style={{ width: '100%' }} name=\"position\" value={position} onChange={onChange} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.title}</dt>\n                            <dd><input type=\"text\" style={{ width: '100%' }} name=\"title\" value={title} onChange={onChange} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.mobile} </dt>\n                            <dd><input type=\"tel\" style={{ width: '100%' }} name=\"phone\" value={phone} onChange={onChange} onKeyDown={onlyNumberListener} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.phone} </dt>\n                            <dd><input type=\"tel\" style={{ width: '100%' }} name=\"tel\" value={tel} onChange={onChange} onKeyDown={onlyNumberListener} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.email} </dt>\n                            <dd>\n                                <input type=\"email\" style={{ width: '100%' }} name=\"email\" value={email} onChange={onChange} />\n                            </dd>\n                        </dl>\n                        <div className={\"privacy\" + current_pack.css}>\n                            <h4>· {current_pack.privacy}</h4>\n                            <span>\n                                <strong>{current_pack.privacy}</strong>\n\n                                    ㈜이노윙(이하 “회사”)는 정보통신망 이용촉진 및 정보보호에 관한 법률, 개인정보보호법에 따라\n                                    모든 고객님의 개인정보보호 및 권익을 보호하기 위하여 수집, 보유된 정보를 적법하고 적정하게 취급할 것입니다.\n\n                                    \"회사\"는 개인정보와 관련한 고객님의 고충을 원활하게 처리할 수 있도록 관련 법령에 의거한\n                                    개인정보 취급방침을 정하여 \"회사\"의 서비스를 이용하는 고객님의 권익보호에 최선을 다하겠습니다.\n                                    본 개인정보처리방침은 ㈜이노윙이 제공하는 서비스 이용에 적용되며 다음과 같은 내용을 담고 있습니다.\n\n                                    제12조 (서비스의 이용 신청에 대한 승낙과 거절)\n                                </span>\n                            <em>\n                                <strong>*</strong>{current_pack.agree}\n                                <input type=\"checkbox\" id=\"p1\" name=\"\" className={\"leftch\" + current_pack.css} onClick={() => setAgree(!agree)} />\n                                <label htmlFor=\"p1\"><span></span> </label>\n                            </em>\n                        </div>\n                        <Link to=\"#\" className={\"btin\" + current_pack.css} onClick={inputCheck}>{current_pack.submit} </Link>\n                    </div>\n                }\n            </div>\n            <Backdrop\n                className={classes.backdrop + current_pack.css}\n                open={open}\n                onClick={close}\n            />\n        </>\n    )\n}\n\nexport default OnlineExhibitionEventContainer;","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory, useLocation } from 'react-router-dom'\n\nimport { Paths } from '../../paths/index'\n\nconst LANGUAGE_URL_LIST = ['/kr', '/en', '/cn', '/jp'];\n\nconst Header = () => {\n    const autoClose = useRef();\n    const location = useLocation();\n    const history = useHistory();\n\n    const selectLanguage = useCallback(e => {\n        // 언어 변경\n        const pathbase = LANGUAGE_URL_LIST.reduce((prev, cur) => {\n            return prev.replace(cur, '');\n        }, location.pathname);\n        history.push(`/${e.target.value}` + pathbase + location.search);\n    }, [location, history]);\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"오프닝세션\",\n            title2: \"컨퍼런스\",\n            title3: \"온라인전시관\",\n            title4: \"공지 및 이벤트\",\n            title5: \"SNS\",\n            title6: \"한국어\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Opening-Session\",\n            title2: \"Conference\",\n            title3: \"Online-Exhibition\",\n            title4: \"Notice\",\n            title5: \"SNS\",\n            title6: \"english\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            title2: \"중국어\",\n            title3: \"중국어\",\n            title4: \"중국어\",\n            title5: \"중국어\",\n            title6: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            title2: \"일본어\",\n            title3: \"일본어\",\n            title4: \"일본어\",\n            title5: \"일본어\",\n            title6: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    useEffect(() => {\n        if (autoClose.current) {\n            autoClose.current.checked = false;\n        }\n    }, [location]);\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <header>\n            <h1>\n                <Link to={Paths.index}>\n                    <img src={(`${process.env.PUBLIC_URL}/img/h1_logo.png`)} alt=\"\" />\n                    <img\n                        src={(`${process.env.PUBLIC_URL}/img/h1_logo_txt.png`)}\n                        alt=\"\"\n                    />\n                </Link>\n            </h1>\n            <nav role=\"navigation\">\n                <div id=\"menuToggle\">\n                    <input type=\"checkbox\" ref={autoClose} />\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <ul id=\"menu\">\n                        <li>\n                            <Link\n                                to={LANGUAGE_PATH + Paths.session}\n                            >\n                                {current_pack.title}\n                            </Link>\n                        </li>\n                        <li>\n                            <Link\n                                to={LANGUAGE_PATH + Paths.conference}\n                            >\n                                {current_pack.title2}\n                            </Link>\n                        </li>\n                        <li>\n                            <Link\n                                to={LANGUAGE_PATH + Paths.exhibition}\n                            >\n                                {current_pack.title3}\n                            </Link>\n                        </li>\n                        <li>\n                            <Link\n                                to={LANGUAGE_PATH + Paths.notice}\n                            >\n                                {current_pack.title4}\n                            </Link>\n                        </li>\n                        <li>\n                            <Link\n                                to={LANGUAGE_PATH + Paths.sns}\n                            >\n                                {current_pack.title5}\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n            <div className={\"select\" + current_pack.css}>\n                <select onChange={selectLanguage} value={language} className={\"select-option\" + current_pack.css}>\n                    <option value=\"kr\">kr</option>\n                    <option value=\"en\">en</option>\n                </select>\n                <div className={\"select__arrow\" + current_pack.css}></div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","import { createAction, handleActions } from 'redux-actions';\n\nconst SET_LANGUAGE = 'language/SET_LANGUAGE';\n\n\nexport const setLanguage = createAction(SET_LANGUAGE, c_lang => c_lang);\n\nconst initialState = {\n    current: \"\"\n};\n\nconst language = handleActions(\n    {\n        [SET_LANGUAGE]: (state, action) => (\n            {\n                current: action.payload\n            })\n    },\n    initialState\n);\n\nexport default language;","import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport ErrorPage from './pages/ErrorPage';\nimport HomePage from './pages/HomePage';\nimport OnlineExhibitionPage from './pages/OnlineExhibitionPage';\nimport ConferencePage from './pages/ConferencePage';\nimport WelcomingPage from './pages/WelcomingPage';\nimport NoticeListPage from './pages/NoticeListPage'\nimport SNSPage from './pages/SNSPage'\n\nimport LoadingContainer from './container/assets/LoadingContainer';\nimport OnlineExhibitionEventContainer from './container/OnlineExhibitionEventContainer';\n\nimport Header from './components/header/Header'\n\nimport { Paths } from './paths';\n\nimport { useDispatch } from 'react-redux';\nimport { setLanguage } from './store/language';\n\nimport './static/stylesheets/search.scss'\n\nconst LANGUAGE_LIST = ['kr', 'cn', 'en', 'jp'];\n\nconst App = ({ match }) => {\n    const reduxDispatch = useDispatch();\n    const { language } = match.params;\n\n    const state = LANGUAGE_LIST.find(item => item === language);\n    // 언어 팩에 일치하는 경로가 아니면 undefined 반환\n\n    useEffect(() => {\n        if (state) {\n            // 만약 경로의 제일 처음에 언어가 선택되어 있으면\n            // 그 언어를 리덕스에 저장.\n            reduxDispatch(setLanguage(state));\n        }\n    }, [reduxDispatch, state]);\n\n\n    const STATE_PATH = state ? `/${state}` : '';\n    const CSS_PATH = state ? `${state}` : 'kr';\n\n    return (\n        <>\n            <link rel=\"stylesheet\" type=\"text/css\" href={`${process.env.PUBLIC_URL}/stylesheets/${CSS_PATH}/common.css`} />\n            <link rel=\"stylesheet\" type=\"text/css\" href={`${process.env.PUBLIC_URL}/stylesheets/${CSS_PATH}/mobile.css`} />\n            <div className={language}>\n                <Header />\n                <Switch>\n                    <Route path={STATE_PATH + Paths.index} component={HomePage} exact />\n                    <Route path={STATE_PATH + Paths.exhibition + '/:index?'} component={OnlineExhibitionPage} />\n                    <Route path={STATE_PATH + Paths.conference} component={ConferencePage} />\n                    <Route path={STATE_PATH + Paths.session + '/:mode?'} component={WelcomingPage} />\n                    <Route path={STATE_PATH + Paths.notice + '/:index?'} component={NoticeListPage} />\n                    <Route path={STATE_PATH + Paths.sns} component={SNSPage} />\n                    <Route component={ErrorPage} />\n                </Switch>\n\n                <OnlineExhibitionEventContainer />\n                <LoadingContainer />\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { createAction, handleActions } from 'redux-actions';\n\nconst OPEN = 'dialog/OPEN';\nconst CLOSE = 'dialog/CLOSE';\n\nexport const dialogOpen = createAction(OPEN, (confirm, title, text, handleClick) => ({\n    confirm, title, text, handleClick\n}));\n\nexport const dialogClose = createAction(CLOSE, form => form);\n\nconst initialState = {\n    open: false,\n    confirm: false,\n    title: \"\",\n    text: \"\",\n    handleClick: () => {}\n};\n\nconst dialog = handleActions(\n    {\n        [OPEN]: (state, action) => {\n            const { confirm, title, text, handleClick } = action.payload;\n            return {\n                ...state,\n                open: true, confirm, title, text, handleClick\n            }\n        },\n        [CLOSE]: (state, action) => ({\n            ...state, open: false\n        })\n    },\n    initialState\n);\n\nexport default dialog;","import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(\n    START_LOADING,\n    (requestType) => requestType,\n);\n\nexport const finishLoading = createAction(\n    FINISH_LOADING,\n    (requestType) => requestType,\n);\n\nconst initialState = {};\n\nconst loading = handleActions(\n    {\n        [START_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: true,\n        }),\n        [FINISH_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: false,\n        }),\n    },\n    initialState,\n);\n\nexport default loading;\n","import { combineReducers } from \"redux\";\n\nimport dialog from './dialog';\nimport loading from './loading';\nimport modal from './modal';\nimport language from './language';\nimport exhibition from './exhibition'\n\nconst rootReducer = combineReducers({\n    loading,\n    dialog,\n    modal,\n    language,\n    exhibition\n});\n\nexport default rootReducer;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n/* Library */\n\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\n\nimport rootReducer  from './store';\n/* Redux */\n\nconst store = createStore(\n    rootReducer\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Route path=\"/:language?\" component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}